# GENERATED BY ./ci.generate.ts -- DO NOT DIRECTLY EDIT

name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "*"
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true
jobs:
  build:
    name: "${{ matrix.config.target }}"
    runs-on: "${{ matrix.config.os }}"
    strategy:
      matrix:
        config:
          - os: macos-13
            run_tests: "true"
            target: x86_64-apple-darwin
            cross: "false"
          - os: macOS-latest
            run_tests: "true"
            target: aarch64-apple-darwin
            cross: "false"
          - os: windows-latest
            run_tests: "true"
            target: x86_64-pc-windows-msvc
            cross: "false"
          - os: ubuntu-20.04
            run_tests: "true"
            target: x86_64-unknown-linux-gnu
            cross: "false"
          - os: ubuntu-20.04
            run_tests: "false"
            target: x86_64-unknown-linux-musl
            cross: "false"
          - os: ubuntu-20.04
            run_tests: "false"
            target: aarch64-unknown-linux-gnu
            cross: "false"
          - os: ubuntu-20.04
            run_tests: "false"
            target: aarch64-unknown-linux-musl
            cross: "true"
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
    outputs:
      ZIP_CHECKSUM_X86_64_APPLE_DARWIN: "${{steps.pre_release_x86_64_apple_darwin.outputs.ZIP_CHECKSUM}}"
      ZIP_CHECKSUM_AARCH64_APPLE_DARWIN: "${{steps.pre_release_aarch64_apple_darwin.outputs.ZIP_CHECKSUM}}"
      ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC: "${{steps.pre_release_x86_64_pc_windows_msvc.outputs.ZIP_CHECKSUM}}"
      INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC: "${{steps.pre_release_x86_64_pc_windows_msvc.outputs.INSTALLER_CHECKSUM}}"
      ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU: "${{steps.pre_release_x86_64_unknown_linux_gnu.outputs.ZIP_CHECKSUM}}"
      ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL: "${{steps.pre_release_x86_64_unknown_linux_musl.outputs.ZIP_CHECKSUM}}"
      ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU: "${{steps.pre_release_aarch64_unknown_linux_gnu.outputs.ZIP_CHECKSUM}}"
      ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_MUSL: "${{steps.pre_release_aarch64_unknown_linux_musl.outputs.ZIP_CHECKSUM}}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dsherret/rust-toolchain-file@v1
      - uses: Swatinem/rust-cache@v2
      - uses: denoland/setup-deno@v1
      - name: Verify wasmer-compiler version
        if: matrix.config.target == 'x86_64-unknown-linux-gnu'
        run: deno run --allow-env --allow-read --allow-net=deno.land .github/workflows/scripts/verify_wasmer_compiler_version.ts
      - name: Setup (Linux x86_64-musl)
        if: matrix.config.target == 'x86_64-unknown-linux-musl'
        run: |-
          sudo apt update
          sudo apt install musl musl-dev musl-tools
          rustup target add x86_64-unknown-linux-musl
      - name: Setup (Linux aarch64)
        if: matrix.config.target == 'aarch64-unknown-linux-gnu'
        run: |-
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
      - name: Setup cross
        if: matrix.config.cross == 'true'
        run: "cargo install cross --git https://github.com/cross-rs/cross --rev 44011c8854cb2eaac83b173cc323220ccdff18ea"
      - name: Build test plugins (Debug)
        if: "matrix.config.run_tests == 'true' && !startsWith(github.ref, 'refs/tags/')"
        run: "cargo build -p test-process-plugin --locked --target ${{matrix.config.target}}"
      - name: Build test plugins (Release)
        if: "matrix.config.run_tests == 'true' && startsWith(github.ref, 'refs/tags/')"
        run: "cargo build -p test-process-plugin --locked --target ${{matrix.config.target}} --release"
      - name: Clippy
        if: "matrix.config.target == 'x86_64-unknown-linux-gnu' && !startsWith(github.ref, 'refs/tags/')"
        run: cargo clippy
      - name: Build (Debug)
        if: "matrix.config.cross != 'true' && !startsWith(github.ref, 'refs/tags/')"
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: "cargo build -p dprint --locked --target ${{matrix.config.target}}"
      - name: Build (Release)
        if: "matrix.config.cross != 'true' && startsWith(github.ref, 'refs/tags/')"
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: "cargo build -p dprint --locked --target ${{matrix.config.target}} --release"
      - name: Build cross (Debug)
        if: "matrix.config.cross == 'true' && !startsWith(github.ref, 'refs/tags/')"
        run: "cross build -p dprint --locked --target ${{matrix.config.target}}"
      - name: Build cross (Release)
        if: "matrix.config.cross == 'true' && startsWith(github.ref, 'refs/tags/')"
        run: "cross build -p dprint --locked --target ${{matrix.config.target}} --release"
      - name: Test (Debug)
        if: "matrix.config.run_tests == 'true' && !startsWith(github.ref, 'refs/tags/')"
        run: "cargo test --locked --target ${{matrix.config.target}} --all-features"
      - name: Test (Release)
        if: "matrix.config.run_tests == 'true' && startsWith(github.ref, 'refs/tags/')"
        run: "cargo test --locked --target ${{matrix.config.target}} --all-features --release"
      - name: Test integration
        if: "matrix.config.target == 'x86_64-unknown-linux-gnu' && !startsWith(github.ref, 'refs/tags/')"
        run: "cargo run -p dprint --locked --target ${{matrix.config.target}} -- check"
      - name: Create installer (Windows x86_64)
        uses: joncloud/makensis-action@v2.0
        if: "matrix.config.target == 'x86_64-pc-windows-msvc' && startsWith(github.ref, 'refs/tags/')"
        with:
          script-file: "${{ github.workspace }}/deployment/installer/dprint-installer.nsi"
      - name: Pre-release (x86_64-apple-darwin)
        id: pre_release_x86_64_apple_darwin
        if: "matrix.config.target == 'x86_64-apple-darwin' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/x86_64-apple-darwin/release
          zip -r dprint-x86_64-apple-darwin.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-apple-darwin.zip | awk '{print $1}')"
      - name: Pre-release (aarch64-apple-darwin)
        id: pre_release_aarch64_apple_darwin
        if: "matrix.config.target == 'aarch64-apple-darwin' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/aarch64-apple-darwin/release
          zip -r dprint-aarch64-apple-darwin.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-aarch64-apple-darwin.zip | awk '{print $1}')"
      - name: Pre-release (x86_64-pc-windows-msvc)
        id: pre_release_x86_64_pc_windows_msvc
        if: "matrix.config.target == 'x86_64-pc-windows-msvc' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          Compress-Archive -CompressionLevel Optimal -Force -Path target/x86_64-pc-windows-msvc/release/dprint.exe -DestinationPath target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip | awk '{print $1}')"
          mv deployment/installer/dprint-x86_64-pc-windows-msvc-installer.exe target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe
          echo "::set-output name=INSTALLER_CHECKSUM::$(shasum -a 256 target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe | awk '{print $1}')"
      - name: Pre-release (x86_64-unknown-linux-gnu)
        id: pre_release_x86_64_unknown_linux_gnu
        if: "matrix.config.target == 'x86_64-unknown-linux-gnu' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/x86_64-unknown-linux-gnu/release
          zip -r dprint-x86_64-unknown-linux-gnu.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-unknown-linux-gnu.zip | awk '{print $1}')"
      - name: Pre-release (x86_64-unknown-linux-musl)
        id: pre_release_x86_64_unknown_linux_musl
        if: "matrix.config.target == 'x86_64-unknown-linux-musl' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/x86_64-unknown-linux-musl/release
          zip -r dprint-x86_64-unknown-linux-musl.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-unknown-linux-musl.zip | awk '{print $1}')"
      - name: Pre-release (aarch64-unknown-linux-gnu)
        id: pre_release_aarch64_unknown_linux_gnu
        if: "matrix.config.target == 'aarch64-unknown-linux-gnu' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/aarch64-unknown-linux-gnu/release
          zip -r dprint-aarch64-unknown-linux-gnu.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-aarch64-unknown-linux-gnu.zip | awk '{print $1}')"
      - name: Pre-release (aarch64-unknown-linux-musl)
        id: pre_release_aarch64_unknown_linux_musl
        if: "matrix.config.target == 'aarch64-unknown-linux-musl' && startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd target/aarch64-unknown-linux-musl/release
          zip -r dprint-aarch64-unknown-linux-musl.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-aarch64-unknown-linux-musl.zip | awk '{print $1}')"
      - name: Upload artifacts (x86_64-apple-darwin)
        if: "matrix.config.target == 'x86_64-apple-darwin' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-apple-darwin-artifacts
          path: target/x86_64-apple-darwin/release/dprint-x86_64-apple-darwin.zip
      - name: Upload artifacts (aarch64-apple-darwin)
        if: "matrix.config.target == 'aarch64-apple-darwin' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-apple-darwin-artifacts
          path: target/aarch64-apple-darwin/release/dprint-aarch64-apple-darwin.zip
      - name: Upload artifacts (x86_64-pc-windows-msvc)
        if: "matrix.config.target == 'x86_64-pc-windows-msvc' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-pc-windows-msvc-artifacts
          path: |-
            target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip
            target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe
      - name: Upload artifacts (x86_64-unknown-linux-gnu)
        if: "matrix.config.target == 'x86_64-unknown-linux-gnu' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-unknown-linux-gnu-artifacts
          path: target/x86_64-unknown-linux-gnu/release/dprint-x86_64-unknown-linux-gnu.zip
      - name: Upload artifacts (x86_64-unknown-linux-musl)
        if: "matrix.config.target == 'x86_64-unknown-linux-musl' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-unknown-linux-musl-artifacts
          path: target/x86_64-unknown-linux-musl/release/dprint-x86_64-unknown-linux-musl.zip
      - name: Upload artifacts (aarch64-unknown-linux-gnu)
        if: "matrix.config.target == 'aarch64-unknown-linux-gnu' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-unknown-linux-gnu-artifacts
          path: target/aarch64-unknown-linux-gnu/release/dprint-aarch64-unknown-linux-gnu.zip
      - name: Upload artifacts (aarch64-unknown-linux-musl)
        if: "matrix.config.target == 'aarch64-unknown-linux-musl' && startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-unknown-linux-musl-artifacts
          path: target/aarch64-unknown-linux-musl/release/dprint-aarch64-unknown-linux-musl.zip
      - name: Test shell installer
        if: "matrix.config.run_tests == 'true' && !startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd website/src/assets
          chmod +x install.sh
          ./install.sh
      - name: Test powershell installer (Windows)
        if: "matrix.config.run_tests == 'true' && !startsWith(github.ref, 'refs/tags/') && matrix.config.target == 'x86_64-pc-windows-msvc'"
        shell: pwsh
        run: |-
          cd website/src/assets
          ./install.ps1
      - name: Test npm
        if: "matrix.config.run_tests == 'true' && !startsWith(github.ref, 'refs/tags/')"
        run: |-
          cd deployment/npm
          deno run -A build.ts 0.45.1
  draft_release:
    name: draft_release
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Output checksums
        run: |-
          echo "dprint-x86_64-apple-darwin.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}}"
          echo "dprint-aarch64-apple-darwin.zip: ${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}}"
          echo "dprint-x86_64-pc-windows-msvc.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}"
          echo "dprint-x86_64-pc-windows-msvc-installer.exe: ${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}"
          echo "dprint-x86_64-unknown-linux-gnu.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}}"
          echo "dprint-x86_64-unknown-linux-musl.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}}"
          echo "dprint-aarch64-unknown-linux-gnu.zip: ${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}}"
          echo "dprint-aarch64-unknown-linux-musl.zip: ${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_MUSL}}"
      - name: Create SHASUMS256.txt file
        run: |-
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}} dprint-x86_64-apple-darwin.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}} dprint-aarch64-apple-darwin.zip" >> SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}} dprint-x86_64-pc-windows-msvc.zip" >> SHASUMS256.txt
          echo "${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}} dprint-x86_64-pc-windows-msvc-installer.exe" >> SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}} dprint-x86_64-unknown-linux-gnu.zip" >> SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}} dprint-x86_64-unknown-linux-musl.zip" >> SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}} dprint-aarch64-unknown-linux-gnu.zip" >> SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_MUSL}} dprint-aarch64-unknown-linux-musl.zip" >> SHASUMS256.txt
      - name: Draft release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          files: |-
            x86_64-apple-darwin-artifacts/dprint-x86_64-apple-darwin.zip
            aarch64-apple-darwin-artifacts/dprint-aarch64-apple-darwin.zip
            x86_64-pc-windows-msvc-artifacts/dprint-x86_64-pc-windows-msvc.zip
            x86_64-pc-windows-msvc-artifacts/dprint-x86_64-pc-windows-msvc-installer.exe
            x86_64-unknown-linux-gnu-artifacts/dprint-x86_64-unknown-linux-gnu.zip
            x86_64-unknown-linux-musl-artifacts/dprint-x86_64-unknown-linux-musl.zip
            aarch64-unknown-linux-gnu-artifacts/dprint-aarch64-unknown-linux-gnu.zip
            aarch64-unknown-linux-musl-artifacts/dprint-aarch64-unknown-linux-musl.zip
            SHASUMS256.txt
          body: |
            ## Changes

            * TODO

            ## Install

            Run `dprint upgrade` or see https://dprint.dev/install/

            ## Checksums

            |Artifact|SHA-256 Checksum|
            |:--|:--|
            |dprint-x86_64-apple-darwin.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}}|
            |dprint-aarch64-apple-darwin.zip|${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}}|
            |dprint-x86_64-pc-windows-msvc.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}|
            |dprint-x86_64-pc-windows-msvc-installer.exe|${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}|
            |dprint-x86_64-unknown-linux-gnu.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}}|
            |dprint-x86_64-unknown-linux-musl.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}}|
            |dprint-aarch64-unknown-linux-gnu.zip|${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}}|
            |dprint-aarch64-unknown-linux-musl.zip|${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_MUSL}}|
          draft: true
