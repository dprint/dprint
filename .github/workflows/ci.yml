# THIS FILE IS AUTO-GENERATED. DO NOT EDIT.
# This CI configuration is generated by ./generate.ts.

name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'
jobs:
  build:
    name: '${{ matrix.config.kind }} ${{ matrix.config.os }}'
    runs-on: '${{ matrix.config.os }}'
    strategy:
      matrix:
        config:
          - os: macOS-latest
            run_tests: 'true'
            target: x86_64-apple-darwin
          - os: macOS-latest
            run_tests: 'false'
            target: aarch64-apple-darwin
          - os: windows-latest
            run_tests: 'true'
            target: x86_64-pc-windows-msvc
          - os: ubuntu-18.0.3
            run_tests: 'true'
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-18.0.3
            run_tests: 'false'
            target: x86_64-unknown-linux-musl
          - os: ubuntu-18.0.3
            run_tests: 'false'
            target: aarch64-unknown-linux-gnu
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
    outputs:
      ZIP_CHECKSUM_X86_64_APPLE_DARWIN: '${{steps.pre_release_x86_64_apple_darwin.outputs.ZIP_CHECKSUM}}'
      ZIP_CHECKSUM_AARCH64_APPLE_DARWIN: '${{steps.pre_release_aarch64_apple_darwin.outputs.ZIP_CHECKSUM}}'
      ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC: '${{steps.pre_release_x86_64_pc_windows_msvc.outputs.ZIP_CHECKSUM}}'
      INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC: '${{steps.pre_release_x86_64_pc_windows_msvc.outputs.INSTALLER_CHECKSUM}}'
      ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU: '${{steps.pre_release_x86_64_unknown_linux_gnu.outputs.ZIP_CHECKSUM}}'
      ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL: '${{steps.pre_release_x86_64_unknown_linux_musl.outputs.ZIP_CHECKSUM}}'
      ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU: '${{steps.pre_release_aarch64_unknown_linux_gnu.outputs.ZIP_CHECKSUM}}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v1
        if: 'startsWith(matrix.config.os, ''ubuntu'') == false'
      - name: Build test plugins
        if: matrix.config.run_tests == 'true'
        run: |-
          cargo build --manifest-path=crates/test-plugin/Cargo.toml --release --target=wasm32-unknown-unknown
          cargo build --manifest-path=crates/test-process-plugin/Cargo.toml --release --locked
      - name: Build debug
        if: matrix.config.kind == 'test_debug'
        run: cargo build --locked --all-features
      - name: Build release
        if: matrix.config.kind == 'release'
        run: cargo build --locked --all-features --release
      - name: Setup (Linux x86_64-musl)
        if: matrix.config.target == 'x86_64-unknown-linux-musl'
        run:
          - sudo apt update
          - sudo apt install musl musl-dev musl-tools
          - rustup target add x86_64-unknown-linux-musl
      - name: Setup (Linux aarch64)
        if: matrix.config.target == 'aarch64-unknown-linux-gnu'
        run:
          - sudo apt update
          - sudo apt install -y gcc-aarch64-linux-gnu
          - rustup target add aarch64-unknown-linux-gnu
          - export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
      - name: Setup (Mac aarch64)
        if: matrix.config.target == 'aarch64-apple-darwin'
        run: rustup target add aarch64-apple-darwin
      - name: Build release
        run: 'cargo build -p dprint --locked --all-features --release --target ${{matrix.config.target}}'
      - name: Test
        if: matrix.config.run_tests == 'true'
        run: cargo test --locked --all-features --release
      - name: Create installer (Windows x86_64)
        uses: joncloud/makensis-action@v2.0
        if: 'startsWith(matrix.config.os, ''windows'') && startsWith(github.ref, ''refs/tags/'')'
        with:
          script-file: '${{ github.workspace }}/deployment/installer/dprint-installer.nsi'
      - name: Pre-release (x86_64-apple-darwin)
        id: pre_release_x86_64_apple_darwin
        if: 'matrix.config.kind == ''x86_64-apple-darwin'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          cd target/x86_64-apple-darwin/release
          zip -r dprint-x86_64-apple-darwin.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-apple-darwin.zip | awk '{print $1}')"
      - name: Pre-release (aarch64-apple-darwin)
        id: pre_release_aarch64_apple_darwin
        if: 'matrix.config.kind == ''aarch64-apple-darwin'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          cd target/aarch64-apple-darwin/release
          zip -r dprint-aarch64-apple-darwin.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-aarch64-apple-darwin.zip | awk '{print $1}')"
      - name: Pre-release (x86_64-pc-windows-msvc)
        id: pre_release_x86_64_pc_windows_msvc
        if: 'matrix.config.kind == ''x86_64-pc-windows-msvc'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          Compress-Archive -CompressionLevel Optimal -Force -Path target/x86_64-pc-windows-msvc/release/dprint.exe -DestinationPath target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip
          mv deployment/installer/dprint-x86_64-pc-windows-msvc-installer.exe target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip | awk '{print $1}')"
          echo "::set-output name=INSTALLER_CHECKSUM::$(shasum -a 256 target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe | awk '{print $1}')"
      - name: Pre-release (x86_64-unknown-linux-gnu)
        id: pre_release_x86_64_unknown_linux_gnu
        if: 'matrix.config.kind == ''x86_64-unknown-linux-gnu'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          cd target/x86_64-unknown-linux-gnu/release
          zip -r dprint-x86_64-unknown-linux-gnu.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-unknown-linux-gnu.zip | awk '{print $1}')"
      - name: Pre-release (x86_64-unknown-linux-musl)
        id: pre_release_x86_64_unknown_linux_musl
        if: 'matrix.config.kind == ''x86_64-unknown-linux-musl'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          cd target/x86_64-unknown-linux-musl/release
          zip -r dprint-x86_64-unknown-linux-musl.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-x86_64-unknown-linux-musl.zip | awk '{print $1}')"
      - name: Pre-release (aarch64-unknown-linux-gnu)
        id: pre_release_aarch64_unknown_linux_gnu
        if: 'matrix.config.kind == ''aarch64-unknown-linux-gnu'' && startsWith(github.ref, ''refs/tags/'')'
        run: |-
          cd target/aarch64-unknown-linux-gnu/release
          zip -r dprint-aarch64-unknown-linux-gnu.zip dprint
          echo "::set-output name=ZIP_CHECKSUM::$(shasum -a 256 dprint-aarch64-unknown-linux-gnu.zip | awk '{print $1}')"
      - name: Upload artifacts (x86_64-apple-darwin)
        if: 'matrix.config.kind == ''x86_64-apple-darwin'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: x86_64-apple-darwin-artifacts
          path: target/x86_64-apple-darwin/release/dprint-x86_64-apple-darwin.zip
      - name: Upload artifacts (aarch64-apple-darwin)
        if: 'matrix.config.kind == ''aarch64-apple-darwin'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: aarch64-apple-darwin-artifacts
          path: target/aarch64-apple-darwin/release/dprint-aarch64-apple-darwin.zip
      - name: Upload artifacts (x86_64-pc-windows-msvc)
        if: 'matrix.config.kind == ''x86_64-pc-windows-msvc'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: x86_64-pc-windows-msvc-artifacts
          path: |-
            target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc.zip
            target/x86_64-pc-windows-msvc/release/dprint-x86_64-pc-windows-msvc-installer.exe
      - name: Upload artifacts (x86_64-unknown-linux-gnu)
        if: 'matrix.config.kind == ''x86_64-unknown-linux-gnu'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: x86_64-unknown-linux-gnu-artifacts
          path: target/x86_64-unknown-linux-gnu/release/dprint-x86_64-unknown-linux-gnu.zip
      - name: Upload artifacts (x86_64-unknown-linux-musl)
        if: 'matrix.config.kind == ''x86_64-unknown-linux-musl'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: x86_64-unknown-linux-musl-artifacts
          path: target/x86_64-unknown-linux-musl/release/dprint-x86_64-unknown-linux-musl.zip
      - name: Upload artifacts (aarch64-unknown-linux-gnu)
        if: 'matrix.config.kind == ''aarch64-unknown-linux-gnu'' && startsWith(github.ref, ''refs/tags/'')'
        with:
          name: aarch64-unknown-linux-gnu-artifacts
          path: target/aarch64-unknown-linux-gnu/release/dprint-aarch64-unknown-linux-gnu.zip
      - name: Test shell installer
        run: |-
          cd website/src/assets
          chmod +x install.sh
          ./install.sh
      - name: Test powershell installer (Windows)
        if: 'startsWith(matrix.config.os, ''windows'')'
        shell: pwsh
        run: |-
          cd website/src/assets
          ./install.ps1
      - name: Test npm
        run: |-
          cd deployment/npm
          curl --fail --location --progress-bar --output "SHASUMS256.txt" "https://github.com/dprint/dprint/releases/download/0.34.1/SHASUMS256.txt"
          node setup.js 0.34.1
          npm install
          node bin.js -v
  draft_release:
    name: draft_release
    if: 'startsWith(github.ref, ''refs/tags/'')'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Get tag version
        id: get_tag_version
        run: 'echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}'
      - name: Output checksums
        run: |-
          echo "dprint-x86_64-apple-darwin.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}}"
          echo "dprint-aarch64-apple-darwin.zip: ${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}}"
          echo "dprint-x86_64-pc-windows-msvc.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}"
          echo "dprint-x86_64-pc-windows-msvc-installer.exe: ${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}"
          echo "dprint-x86_64-unknown-linux-gnu.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}}"
          echo "dprint-x86_64-unknown-linux-musl.zip: ${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}}"
          echo "dprint-aarch64-unknown-linux-gnu.zip: ${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}}"
      - name: Create SHASUMS256.txt file
        run: |-
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}} dprint-x86_64-apple-darwin.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}} dprint-aarch64-apple-darwin.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}} dprint-x86_64-pc-windows-msvc.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}} dprint-x86_64-pc-windows-msvc-installer.exe" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}} dprint-x86_64-unknown-linux-gnu.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}} dprint-x86_64-unknown-linux-musl.zip" > SHASUMS256.txt
          echo "${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}} dprint-aarch64-unknown-linux-gnu.zip" > SHASUMS256.txt
      - name: Draft release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          files: |-
            x86_64-apple-darwin-artifacts/dprint-x86_64-apple-darwin.zip
            aarch64-apple-darwin-artifacts/dprint-aarch64-apple-darwin.zip
            x86_64-pc-windows-msvc-artifacts/dprint-x86_64-pc-windows-msvc.zip
            x86_64-pc-windows-msvc-artifacts/dprint-x86_64-pc-windows-msvc-installer.exe
            x86_64-unknown-linux-gnu-artifacts/dprint-x86_64-unknown-linux-gnu.zip
            x86_64-unknown-linux-musl-artifacts/dprint-x86_64-unknown-linux-musl.zip
            aarch64-unknown-linux-gnu-artifacts/dprint-aarch64-unknown-linux-gnu.zip
          body: |
            ## Changes

            * TODO

            ## Install

            Run `dprint upgrade` or see https://dprint.dev/install/

            ## Checksums

            |Artifact|SHA-256 Checksum|
            |:--|:--|
            |dprint-x86_64-apple-darwin.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_APPLE_DARWIN}}|
            |dprint-aarch64-apple-darwin.zip|${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_APPLE_DARWIN}}|
            |dprint-x86_64-pc-windows-msvc.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}|
            |dprint-x86_64-pc-windows-msvc-installer.exe|${{needs.build.outputs.INSTALLER_CHECKSUM_X86_64_PC_WINDOWS_MSVC}}|
            |dprint-x86_64-unknown-linux-gnu.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_GNU}}|
            |dprint-x86_64-unknown-linux-musl.zip|${{needs.build.outputs.ZIP_CHECKSUM_X86_64_UNKNOWN_LINUX_MUSL}}|
            |dprint-aarch64-unknown-linux-gnu.zip|${{needs.build.outputs.ZIP_CHECKSUM_AARCH64_UNKNOWN_LINUX_GNU}}|
          draft: true
