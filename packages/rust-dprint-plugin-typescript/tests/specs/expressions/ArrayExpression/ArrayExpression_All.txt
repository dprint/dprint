~~ lineWidth: 40 ~~
== should format ==
const t = [   5   , 6   ];

[expect]
const t = [5, 6];

== should split on multiple lines when first is on different line ==
const t = [
    5, // testing
    6, 7   ];

[expect]
const t = [
    5, // testing
    6,
    7,
];

== should print on multiple lines when exceeding line width ==
const t = [other, other, other, otherTest, other];

[expect]
const t = [
    other,
    other,
    other,
    otherTest,
    other,
];

== should allow blank lines between items ==
const t = [

    other,

    other,
    other,


    otherTest,

    ];

[expect]
const t = [
    other,

    other,
    other,

    otherTest,
];

== should allow blank lines between leading inner comments ==
const t = [

    // 0


    // 1

    // 2
    // 3

    other,

    other,];

[expect]
const t = [
    // 0

    // 1

    // 2
    // 3

    other,

    other,
];

== should handle spacing between trailing comments ==
const t = [
    test, /*
    test */
    asdf, // test
    /* t */
    test,
    asdf, // test

    /* t */
    test, /*
    test
    test */ //5
    asdf, /*
    t */ /* test
    */
    asdf, /*
    u
    */ test,
];

[expect]
const t = [
    test, /*
    test */
    asdf, // test
    /* t */
    test,
    asdf, // test

    /* t */
    test, /*
    test
    test */
    // 5
    asdf, /*
    t */
    /* test
    */
    asdf, /*
    u
    */
    test,
];

== should format handling multiple multi-line block comments starting and stopping on same line after an item ==
const t = [
    test, /*
    test */ /*
    test */

    test, /* 1 */ /*
    test */
    test,
];

[expect]
const t = [
    test, /*
    test */
    /*
    test */

    test, /* 1 */ /*
    test */
    test,
];

== should become single line when empty ==
const t = [
];

[expect]
const t = [];
