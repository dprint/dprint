~~ lineWidth: 40, binaryExpression.linePerExpression: true, preferSingleLine: true ~~
== should go full multi-line when exceeding the width ==
testing + asdf + out + asdf + when + it + passes + thelineWidth + someMore;

[expect]
testing
    + asdf
    + out
    + asdf
    + when
    + it
    + passes
    + thelineWidth
    + someMore;

== should maintain single line when below the width ==
testing + asdf + out;

[expect]
testing + asdf + out;

== should go single line when able ==
testing
    + asdf + out;
testing + asdf
    + out;

[expect]
testing + asdf + out;
testing + asdf + out;

== should format with nested binary expressions ==
if (
    test >= 2
    && test === "\r"
    && test === "\n"
) {
}

[expect]
if (
    test >= 2
    && test === "\r"
    && test === "\n"
) {
}
