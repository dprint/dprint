~~ lineWidth: 40 ~~
== should format ==
interface T {
    (): void;
    <T>(a: T): T;
    <T, U, V>(): string;
    (a: string, b: number): string;
    (param: string, otherParameter: number): str;
    (
    param: string
    ): number;
}

[expect]
interface T {
    (): void;
    <T>(a: T): T;
    <T, U, V>(): string;
    (a: string, b: number): string;
    (param: string,
        otherParameter: number): str;
    (
        param: string
    ): number;
}

== should format the return type as hanging when it's hanging ==
interface T {
    (param: string, p2: 5): testing | number;
}

[expect]
interface T {
    (param: string, p2: 5): testing
        | number;
}

== should format the return type on the same line when the rest of the header is hanging ==
interface T {
    (param: string, otherTesting: string): te | st;
}

[expect]
interface T {
    (param: string,
        otherTesting: string): te | st;
}

== should format the return type on a new line when it's hanging and the rest of the header is hanging ==
interface T {
    (param: string, otherTesting: string): test | other | other;
}

[expect]
interface T {
    (param: string,
        otherTesting: string
    ): test | other | other;
}
